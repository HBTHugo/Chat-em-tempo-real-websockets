pipeline {
    agent any

    stages {
        stage('Clone Repository') {
            steps {
                // Clona o repositório
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                // Instala as dependências usando npm
                bat 'npm install'
            }
        }

        stage('Run Tests') {
            steps {
                // Executa os testes e gera o arquivo de resultados
                bat 'npm test'
            }
        }

        stage('Build Docker Image') {
            steps {
                // Constrói a imagem Docker
                bat 'docker build -t nome-da-imagem .'
            }
        }

        stage('Deploy') {
            steps {
                // Executa o contêiner Docker
                bat 'docker run -d -p 3000:3000 nome-da-imagem'
            }
        }
    }

    post {
        always {
            // Arquiva o relatório de teste gerado pelo Mocha
            junit '**/results.xml'

            // Exibe uma mensagem se a pipeline falhar
            script {
                if (currentBuild.result == 'FAILURE') {
                    echo 'Pipeline falhou. Tome uma ação!'
                }
            }
        }

        success {
            echo 'Pipeline executada com sucesso!'
        }

        failure {
            echo 'Houve uma falha na pipeline.'
        }
    }
}
